<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:cache= "http://www.springframework.org/schema/cache"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    					http://www.springframework.org/schema/beans/spring-beans.xsd
    					http://www.springframework.org/schema/cache   
						http://www.springframework.org/schema/cache/spring-cache.xsd
						http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
    					http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring 
    					http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">
    <!-- 定时任务 -->
    <!-- 识别@Scheduled注解 -->
    <task:annotation-driven/>  
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	<!-- AOP式方法级权限检查 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象  -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean> 
    
    <!--   
       Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行  
       Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持   
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <!-- Shiro的核心安全接口，这个属性是必须的 -->  
        <property name="securityManager" ref="securityManager"/>  
        <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->  
        <property name="loginUrl" value="/login.jsp"/>  
        <!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->  
        <!-- <property name="successUrl" value="/index.jsp" ></property> -->  
        <!-- 用户访问未对其授权的资源时，所显示的连接 -->  
        <property name="unauthorizedUrl" value="/403.jsp"/>  
        <property name="filterChainDefinitions">  
            <value>
                /index*=authc
                /login/userLogin*=anon
                /mngUserInfo/userRegist.action=anon
                /instInfo/getInstByAreaCode.action=anon
                /mngUserInfo/**.action=anon
                /**/**.action=authc
                <!--/**/**.action=roles[general]
                  -->
            </value>  
        </property>  
    </bean>
    
    <!-- Shiro安全管理器 -->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <property name="realm" ref="systemRealm"></property>
        <property name="cacheManager" ref="shiroCacheManager"/>
        <!-- <property name="sessionManager" ref="sessionManager"/> -->
    </bean>
    
    <bean id="systemRealm" class="com.nasoft.aboutcar.common.realm.SystemRealm">
    	<property name="cachingEnabled" value="false"/>
    </bean>
    
    <!-- 缓存管理 -->
    <bean id = "ehcacheCacheManager" class= "org.springframework.cache.ehcache.EhCacheCacheManager">  
	    <property name="cacheManager" ref="ehCacheManager"/>
    </bean>
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    	<property name="cacheManager" ref="ehCacheManager"></property>
    </bean>
      
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
       	 当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="jeesite.session.id"/>
    </bean>
    
	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">  
	    <property name="globalSessionTimeout" value="1800000"/>
	    <property name="deleteInvalidSessions" value="true"/>
	    <property name="sessionValidationSchedulerEnabled" value="true"/>
	   <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>  
	</bean>
	
	
	<!-- 会话验证调度器 -->  
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">  
	    <property name="sessionValidationInterval" value="1800000"/>  
	    <property name="sessionManager" ref="sessionManager"/>
	</bean>
    
    <!-- 使用ehcache缓存 -->
    <cache:annotation-driven cache-manager ="ehcacheCacheManager" />
   <!-- <ehcache:annotation-driven/>
   <ehcache:config cache-manager="ehcacheCacheManager">  
        <ehcache:evict-expired-elements interval="60" />
   </ehcache:config> -->
   <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
     <property name="configLocation" value="classpath:ehcache.xml" />
     <property name="shared" value="true"></property>
   </bean>
    
    <!--   
	      使用Shiro自带的JdbcRealm类  
	      指定密码匹配所需要用到的加密对象  
	      指定存储用户、角色、权限许可的数据源及相关查询语句  
     
     <bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">  
        <property name="dataSource" ref="dataSource"/>  
        <property name="authenticationQuery"  
            value="SELECT password FROM mng_userinfo WHERE username = ?"></property>  
        <property name="userRolesQuery"  
            value="SELECT role_name from sec_user_role left join sec_role using(role_id) left join sec_user using(user_id) WHERE user_name = ?"></property>  
        <property name="permissionsQuery"  
            value="SELECT permission_name FROM sec_role_permission left join sec_role using(role_id) left join sec_permission using(permission_id) WHERE role_name = ?"></property>  
    </bean>-->
    
    <!--   
	       开启Shiro的注解(如@RequiresRoles，@RequiresPermissions)，需借助SpringAOP扫描使用Shiro注解的类，  
	       并在必要时进行安全逻辑验证  
    -->
    <!--  
    <bean  
        class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"></bean>  
    <bean  
        class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager"></property>  
    </bean>  
    -->
    <!-- 支持Shiro对Controller的方法级AOP安全控制 begin-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
</beans>