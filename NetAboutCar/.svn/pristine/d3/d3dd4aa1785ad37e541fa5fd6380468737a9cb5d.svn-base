<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nasoft.aboutcar.BnsOperationPayMapper" >
  <resultMap id="BaseResultMap" type="com.nasoft.aboutcar.supervise.domain.BnsOperationPay" >
    <id column="operation_pay_id" property="operationPayId" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="on_area" property="onArea" jdbcType="INTEGER" />
    <result column="driver_name" property="driverName" jdbcType="VARCHAR" />
    <result column="licenseI_id" property="licenseiId" jdbcType="VARCHAR" />
    <result column="fare_type" property="fareType" jdbcType="VARCHAR" />
    <result column="vehicle_no" property="vehicleNo" jdbcType="VARCHAR" />
    <result column="book_dep_time" property="bookDepTime" jdbcType="TIMESTAMP" />
    <result column="drive_mile" property="driveMile" jdbcType="DECIMAL" />
    <result column="drive_time" property="driveTime" jdbcType="TIMESTAMP" />
    <result column="wait_mile" property="waitMile" jdbcType="DECIMAL" />
    <result column="fact_price" property="factPrice" jdbcType="DECIMAL" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="cash_price" property="cashPrice" jdbcType="DECIMAL" />
    <result column="pay_state" property="payState" jdbcType="CHAR" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="order_match_time" property="orderMatchTime" jdbcType="TIMESTAMP" />
    <result column="invoice_status" property="invoiceStatus" jdbcType="CHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <select id="findOperationPay" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select * from yyjg_operation_pay
    <where>
		<if test="vehicle_no != null and vehicle_no !=''">
		vehicle_no = #{vehicle_no}
		</if>
		<if test="company_id != null and company_id !=''">
		company_id = #{company_id}
		</if>
	</where>
  </select>
  
  <select id="globalOperationAnalyzing" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT p.comname,
	(SELECT COUNT(DISTINCT r.certno) FROM xzsp_drv_record r where r.creditcode = p.creditcode) AS drvNum,
	(SELECT COUNT(DISTINCT r.carid) FROM xzsp_drv_record r where r.creditcode = p.creditcode) AS carNum,
	(SELECT COUNT(DISTINCT licenseI_id) FROM yyjg_operation_pay p 
		where p.company_id = p.creditcode
		<if test="onArea != null and onArea != '' ">
			and p.on_area = #{onArea}
		</if>
		<if test="createTime != null and createTime != '' ">
			and date_format(p.create_time,'%Y-%m-%d') = #{createTime}
		</if>
	) AS activeDrvNum,
	(SELECT COUNT(DISTINCT vehicle_no) FROM yyjg_operation_pay p 
		where p.company_id = p.creditcode
		<if test="onArea != null and onArea != '' ">
			and p.on_area = #{onArea}
		</if>
		<if test="createTime != null and createTime != '' ">
			and date_format(p.create_time,'%Y-%m-%d') = #{createTime}
		</if>
	) AS activeCarNum,
	(SELECT COUNT(DISTINCT o.vehicle_no) FROM mng_car_operating_online o 
		where o.company_id=p.creditcode
		<if test="onArea != null and onArea != '' ">
			and o.region_code = #{onArea}
		</if>
		<if test="createTime != null and createTime != '' ">
			and date_format(o.create_time,'%Y-%m-%d') = #{createTime}
		</if>
	) AS outcarNum,
	(SELECT COUNT(DISTINCT s.order_id) FROM mng_order_start_info s 
		where s.company_id = p.creditcode
		<if test="onArea != null and onArea != '' ">
			and s.address = #{onArea}
		</if>
		<if test="createTime != null and createTime != '' ">
			and date_format(s.create_time,'%Y-%m-%d') = #{createTime}
		</if>
	) AS orderNum,
	(SELECT COUNT(DISTINCT s.order_id) FROM mng_order_success s 
		where s.company_id = p.creditcode
		<if test="onArea != null and onArea != '' ">
			and s.address = #{onArea}
		</if>
		<if test="createTime != null and createTime != '' ">
			and date_format(s.create_time,'%Y-%m-%d') = #{createTime}
		</if>
	) AS orderSuccessNum,
	(SELECT COUNT(DISTINCT c.vehicle_no) FROM yyjg_car_position_info c 
		where c.company_id = p.creditcode and c.warnStatus = 1
		<if test="onArea != null and onArea != '' ">
			and c.vehicle_region_code = #{onArea}
		</if>
		<if test="createTime != null and createTime != '' ">
			and date_format(c.create_time,'%Y-%m-%d') = #{createTime}
		</if>
	) AS warnNum
	FROM xzsp_com_companyinfo p
	GROUP BY p.creditcode
  </select>
  
  <select id="selectOnArea" resultType="java.util.HashMap">
	SELECT DISTINCT p.on_area,a.areaname 
	FROM yyjg_operation_pay p LEFT JOIN mng_areainfo a ON p.on_area = a.areacode
  </select>
  
  <insert id="insert" parameterType="com.nasoft.aboutcar.supervise.domain.BnsOperationPay" >
    insert into yyjg_operation_pay (operation_pay_id, company_id, order_id, 
      on_area, driver_name, licenseI_id, 
      fare_type, vehicle_no, book_dep_time, 
      drive_mile, drive_time, wait_mile, 
      fact_price, price, cash_price, 
      pay_state, pay_time, order_match_time, 
      invoice_status, create_user, create_time, 
      update_user, update_time)
    values (#{operationPayId,jdbcType=INTEGER}, #{companyId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{onArea,jdbcType=INTEGER}, #{driverName,jdbcType=VARCHAR}, #{licenseiId,jdbcType=VARCHAR}, 
      #{fareType,jdbcType=VARCHAR}, #{vehicleNo,jdbcType=VARCHAR}, #{bookDepTime,jdbcType=TIMESTAMP}, 
      #{driveMile,jdbcType=DECIMAL}, #{driveTime,jdbcType=TIMESTAMP}, #{waitMile,jdbcType=DECIMAL}, 
      #{factPrice,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, #{cashPrice,jdbcType=DECIMAL}, 
      #{payState,jdbcType=CHAR}, #{payTime,jdbcType=TIMESTAMP}, #{orderMatchTime,jdbcType=TIMESTAMP}, 
      #{invoiceStatus,jdbcType=CHAR}, #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  
</mapper>